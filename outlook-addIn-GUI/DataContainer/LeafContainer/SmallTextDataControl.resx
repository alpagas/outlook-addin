<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADk
        CAAAAk1TRnQBSQFMAgEBBgEAAWABAAH4AQABCQEAAQkBAAT/ASEBEAj/AUIBTQE2BwABNgMAASgDAAEk
        AwABEgMAAQEBAAEgBQABIAEKEgADSQGHAVgBSwGbAfUCPAE9AWgMAAI8AT0BaAJCAZcB9QJIAUkBiAQA
        AUYCRwFjAXUBeAF2AccBdQF4AXYBxwFzAXcBdgHHAXMBdgF1AccBcwJ2AccBaQFqAWkBpwMAAQFIAAFS
        AVAB9wH/AV4BWwH8Af8BRgFFAfMB/wM8AWYEAAM8AWYBNAEyAe8B/wFKAUgB+gH/ASwBKgHtAf8EAAF0
        AXcBdgHDAfgC+QH/A/YB/wFrAXEBdAH/Aa4BvgHGAf8D1gH/AbkBugG5Af8DBAEGSAADRQF8AVkBVgH5
        Af8BZAFiAf0B/wFIAUcB9AH/AlYBWAHBAT4BPAHxAf8BVgFVAf0B/wE+ATwB8wH/AkQBRQF8BAABdAF4
        AXcBxQH1AvYB/wHvAvAB/wFMAYQBpgH/AU0BbgGDAf8BVwGMAa0B/wG4Ab0BvgH/AwIBA0wAA0QBewJZ
        AZ0B9QFoAWYC/wFeAVsB/gH/AWIBYQL/AlkBmwH1A0QBewgAAXUBeAF3AcUB9gL3Af8BywLMAf8BuAHB
        AcYB/wGeAckB2gH/AV8BkwGyAf8BLwFqAY0B/wMEAQVQAANbAcQBZwFkAv8BSQFGAv8BYAFeAv8CWQFb
        AcQMAAF1AXgBdwHFAfYC9wH/AcoCywH/AcoCywH/AbQBvQHCAf8BhQG6AdAB/wFcAZcBugH/ASgBWQF4
        Ab9MAAM9AWcCXQGHAfABcwFvAv8BaQFmAv8BbAFpAv8CWgGGAfADPQFnCAABdQF4AXcBxQH2AvcB/wHU
        AtUB/wHUAtUB/wHUAtUB/wGyAcUB0QH/AW8BqwHHAf8BUQGOAbQB/kgAAz0BaQFrAWgB/QH/AYMBgAL/
        AWcBZQH7Af8DWwHIAV8BXAH6Af8BbAFpAf4B/wFOAUsB9QH/Az0BaAQAAXQBeAF3AcUB+gL7Af8B9gL3
        Af8B9gL3Af8B9gL3Af8B9gL3Af8BqQG/AcwB/wE0AUkBVQF5SAABbgFrAv8BhQGCAv8BcQFuAf4B/wNE
        AXoEAANEAXoBYQFeAfoB/wFuAWsB/gH/AVIBTwH2Af8EAANaAX4BdAJ3AcYBdAJ3AcYBdAJ3AcYBdAJ3
        AcYBdAJ3AcYBagFsAWsBqUwAA0IBdgJoAZ8B9QNFAXwMAANFAXwBXgFaAZ4B9QNZAb58AAGlAV4BCAH/
        GAABpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/GAADgAH/GAADgAH/A4AB/wOA
        Af8DgAH/A4AB/xQAAaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/FAABpQFeAQgB/wGlAV4BCAH/AaUBXgEI
        Af8BpQFeAQgB/wGlAV4BCAH/FAADgAH/A4AB/wOAAf8UAAOAAf8DgAH/A4AB/wOAAf8DgAH/EAABpQFe
        AQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/EAABpQFeAQgB/wGlAV4BCAH/AaUBXgEI
        Af8BpQFeAQgB/wGlAV4BCAH/EAADgAH/A4AB/wOAAf8DgAH/A4AB/xAAA4AB/wOAAf8DgAH/A4AB/wOA
        Af8MAAGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/
        DAABpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/DAADgAH/A4AB/wOAAf8DgAH/
        A4AB/wOAAf8DgAH/DAADgAH/A4AB/wOAAf8DgAH/A4AB/wgAAaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/
        AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFe
        AQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/
        A4AB/wOAAf8DgAH/A4AB/wOAAf8DgAH/A4AB/wOAAf8DgAH/A4AB/wOAAf8DgAH/A4AB/wOAAf8DgAH/
        A4AB/wOAAf8DgAH/CAABpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/DAABpQFe
        AQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wwAA4AB/wOA
        Af8DgAH/A4AB/wOAAf8MAAOAAf8DgAH/A4AB/wOAAf8DgAH/A4AB/wOAAf8MAAGlAV4BCAH/AaUBXgEI
        Af8BpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8QAAGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/
        AaUBXgEIAf8QAAOAAf8DgAH/A4AB/wOAAf8DgAH/EAADgAH/A4AB/wOAAf8DgAH/A4AB/xAAAaUBXgEI
        Af8BpQFeAQgB/wGlAV4BCAH/AaUBXgEIAf8BpQFeAQgB/xQAAaUBXgEIAf8BpQFeAQgB/wGlAV4BCAH/
        FAADgAH/A4AB/wOAAf8DgAH/A4AB/xQAA4AB/wOAAf8DgAH/FAABpQFeAQgB/wGlAV4BCAH/AaUBXgEI
        Af8BpQFeAQgB/wGlAV4BCAH/GAABpQFeAQgB/xgAA4AB/wOAAf8DgAH/A4AB/wOAAf8YAAOAAf8QAAFC
        AU0BPgcAAT4DAAEoAwABJAMAARIDAAEBAQABAQUAAZAXAAP/AQABHAFABgABCAFABwABQAYAAYABwAYA
        AcEBwAYAAYABwAcAAUAGAAEIAkAFAAEcAX8BwAUAAfcB4AH9AfgBMAMAAeMB4AL4ATADAAHBAeAB8AF4
        ATADAAGAAuABOAEwCwABwQHAAnABEAMAAcEB4AHwAXgBMAMAAcEB8QHwAXwBcAMAAcEB+wHwAX4B8BkA
        Cw==
</value>
  </data>
</root>