<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABg
        CQAAAk1TRnQBSQFMAgEBBwEAAZgBAAGYAQABCQEAAQkBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAEk
        AwABEgMAAQEBAAEgBQABIAEKEgADSQGHAVkBSwGCAfUCPAE9AWgMAAI8AT0BaAJCAYAB9QJIAUkBiAQA
        AzsBYwNaAccDWgHHA1oBxwNaAccDWgHHA1IBpwMAAQFIAAFLAUkB9wH/AVcBVAH8Af8BPwE+AfMB/wM8
        AWYEAAM8AWYBLQErAe8B/wFDAUEB+gH/ASUBIwHtAf8EAANbAcMB+AL5Af8D9gH/AWQBagFtAf8BrgG+
        AcYB/wPWAf8BuQG6AbkB/wMEAQZIAANFAXwBUgFPAfkB/wFdAVsB/QH/AUEBQAH0Af8CVgFYAcEBNwE1
        AfEB/wFPAU4B/QH/ATcBNQHzAf8CRAFFAXwEAANaAcUB9QL2Af8B7wLwAf8BRQGEAaYB/wFGAWcBgwH/
        AVABjAGtAf8BuAG9Ab4B/wMCAQMQAAMIAQsDAQECNAADRAF7AlkBgwH1AWEBXwL/AVcBVAH+Af8BWwFa
        Av8CWQGCAfUDRAF7CAADWgHFAfYC9wH/AcsCzAH/AbgBwQHGAf8BngHJAdoB/wFYAZMBsgH/ASgBYwGN
        Af8DBAEFCAADCQEMAz8BbwMwAUwDOwFjAygBPAMAAQEwAANbAcQBYAFdAv8BQgE/Av8BWQFXAv8CWQFb
        AcQMAANaAcUB9gL3Af8BygLLAf8BygLLAf8BtAG9AcIB/wGFAboB0AH/AVUBlwG6Af8BVwJZAb8IAAMv
        AUoDAQECA0UBfQMNARIDEAEWAy0BRiwAAz0BZwJdAWwB8AFsAWgC/wFiAV8C/wFlAWIC/wJaAWwB8AM9
        AWcIAANaAcUB9gL3Af8B1ALVAf8B1ALVAf8B1ALVAf8BsgHFAdEB/wFoAasBxwH/AVEBgAGmAf4EAAMC
        AQMDIwE0A0EBcwNWAckDTAGSAxwBKAMqAUEoAAM9AWkBZAFhAf0B/wGDAYAC/wFgAV4B+wH/A1sByAFY
        AVUB+gH/AWUBYgH+Af8BRwFEAfUB/wM9AWgEAANaAcUB+gL7Af8B9gL3Af8B9gL3Af8B9gL3Af8B9gL3
        Af8BqQG/AcwB/wNEAXkHAAEBAyQBNQMuAUgDVAGyAzoBYgMSARkDLAFDKAABZwFkAv8BhQGCAv8BagFn
        Af4B/wNEAXoEAANEAXoBWgFXAfoB/wFnAWQB/gH/AUsBSAH2Af8EAANGAX4DWwHGA1sBxgNbAcYDWwHG
        A1sBxgNSAakMAAMwAUwDCAELAzUBVwMJAQwDHgErAyUBNygAA0IBdgJcAYQB9QNFAXwMAANFAXwCWQGE
        AfUDWQG+MAADOQFfA0IBdQNCAXUDGQEjPAABpQFXAQEB/xgAAaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/
        AaUBVwEBAf8BpQFXAQEB/xgAA4AB/xgAA4AB/wOAAf8DgAH/A4AB/wOAAf8UAAGlAVcBAQH/AaUBVwEB
        Af8BpQFXAQEB/xQAAaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/xQAA4AB/wOA
        Af8DgAH/FAADgAH/A4AB/wOAAf8DgAH/A4AB/xAAAaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/AaUBVwEB
        Af8BpQFXAQEB/xAAAaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/xAAA4AB/wOA
        Af8DgAH/A4AB/wOAAf8QAAOAAf8DgAH/A4AB/wOAAf8DgAH/DAABpQFXAQEB/wGlAVcBAQH/AaUBVwEB
        Af8BpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/wwAAaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/
        AaUBVwEBAf8BpQFXAQEB/wwAA4AB/wOAAf8DgAH/A4AB/wOAAf8DgAH/A4AB/wwAA4AB/wOAAf8DgAH/
        A4AB/wOAAf8IAAGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/wGl
        AVcBAQH/AaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/AaUBVwEB
        Af8BpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/wOAAf8DgAH/A4AB/wOAAf8DgAH/A4AB/wOA
        Af8DgAH/A4AB/wOAAf8DgAH/A4AB/wOAAf8DgAH/A4AB/wOAAf8DgAH/A4AB/wgAAaUBVwEBAf8BpQFX
        AQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/wwAAaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/AaUBVwEB
        Af8BpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8MAAOAAf8DgAH/A4AB/wOAAf8DgAH/DAADgAH/A4AB/wOA
        Af8DgAH/A4AB/wOAAf8DgAH/DAABpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/
        EAABpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/EAADgAH/A4AB/wOAAf8DgAH/
        A4AB/xAAA4AB/wOAAf8DgAH/A4AB/wOAAf8QAAGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/
        AaUBVwEBAf8UAAGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/xQAA4AB/wOAAf8DgAH/A4AB/wOAAf8UAAOA
        Af8DgAH/A4AB/xQAAaUBVwEBAf8BpQFXAQEB/wGlAVcBAQH/AaUBVwEBAf8BpQFXAQEB/xgAAaUBVwEB
        Af8YAAOAAf8DgAH/A4AB/wOAAf8DgAH/GAADgAH/EAABQgFNAT4HAAE+AwABKAMAASQDAAESAwABAQEA
        AQEFAAGQFwAD/wEAARwBQAE/AeAEAAEIAUABPwHgBQABQAE8AeAEAAGAAcABMAEgBAABwQHAATABIAQA
        AYABwAIgBQABQAIgBAABCAFAAXABIAQAARwBfwH4AWAEAAH3AeAB/QH4ATADAAHjAeAC+AEwAwABwQHg
        AfABeAEwAwABgALgATgBMAsAAcEBwAJwARADAAHBAeAB8AF4ATADAAHBAfEB8AF8AXADAAHBAfsB8AF+
        AfADAAs=
</value>
  </data>
</root>